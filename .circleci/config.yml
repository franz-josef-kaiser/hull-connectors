version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15
#      - image: circleci/mongo:3.6.12
#      - image: circleci/redis:5.0.4
    steps:
      - checkout
#      - run:
#          name: Upgrade Yarn
#          command: sudo npm i -g yarn@$(node -p 'require("./package.json").engines.yarn')
#      - restore_cache:
#          name: Restore Yarn cache
#          keys:
#            - yarn-packages-{{ checksum "yarn.lock" }}
#      - run:
#          name: Install Dependencies
#          command: yarn
#      - save_cache:
#          name: Save Yarn Package cache
#          key: yarn-packages-{{ checksum "yarn.lock" }}
#          paths:
#            - ~/.cache/yarn
#      - run:
#          name: Run tests
#          command: yarn test:ci
      # Don't try building connectors if not in branch master or develop
      - run:
          name: Check branch
          command: |
            if [ "$CIRCLE_BRANCH" != "develop" ] && [ "$CIRCLE_BRANCH" != "master" ] && [ "$CIRCLE_BRANCH" != "feature/circleci-docker" ]; then
              circleci-agent step halt
              echo "Skipping build, current branch not master or develop"
            fi
      # This part will do the following:
      # 1. Look for the last successful build
      # 2. Parse through the folders found in packages/connectors
      # 3. If the git diff command finds changes in a one of these folders, add it to a list
      - run:
          name: Find changes in connectors
          command: |
            LAST_SUCCESSFUL_COMMIT=$(`python3 ${CIRCLE_BRANCH} ${CIRCLE_TOKEN}`)
            echo "comparing between commit $LAST_SUCCESSFUL_COMMIT and commit $CIRCLE_SHA1"
            connectors=""
            full_connectors_list=""
            for fn in packages/connectors/*/; do
                current_connector=${fn:25:(-1)}
                full_connectors_list+="$current_connector\|"
                changes=`git diff $LAST_SUCCESSFUL_COMMIT $CIRCLE_SHA1 $fn 2>&1`
                if [ -z "$changes" ]
                then
                  echo "no changes for $current_connector"
                else
                  echo "changes for connector $current_connector"
                  connectors+="$current_connector\|"
                fi
            done
            if [ -z $connectors ]
            then
              connectors=$full_connectors_list
              echo "No changes detected in connectors, going to rebuild all connectors"
            fi
            connectors="zapier\|"
            echo "export CONNECTORS_TO_BUILD=${connectors}" >> $BASH_ENV
      - setup_remote_docker
      # This part will try to build connectors based on the list defined in the previous step
      # If the list is empty, changes are on another level, then build everything
      - run:
          name: Build connectors
          command: |
            IFS='|' read -r -a array <<< "${CONNECTORS_TO_BUILD::(-1)}"
            for c in "${array[@]}"; do
              echo "Triggering build for connector: $c"
              docker build --build-arg CONNECTOR=hull-$c -t hull/hull-connectors:$c .
              docker push hull/hull-connectors:$c
            done
#            echo "Hello"
#            echo "building connector"
      # - setup_remote_docker
      # - run:
      #     name: Deploy all connectors
      #     command: |
      #       echo $DEPLOYMENT_CONFIG_JS | base64 -d > deployment.config.js
      #       CONNECTORS=`BRANCH=$CIRCLE_BRANCH sh scripts/get-connectors-to-deploy.sh`
      #       docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
      #       echo $CONNECTORS
      #       echo "$CONNECTORS" | while IFS= read -r C ; do CONNECTOR=$C BRANCH=$CIRCLE_BRANCH sh scripts/deploy-to-heroku.sh; done
